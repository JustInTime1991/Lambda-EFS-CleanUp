Resources:
  TestEFS:
    Type: AWS::EFS::FileSystem
    Properties:
      AvailabilityZoneName : "us-east-1a"

  TestEFSAP:
    Type: AWS::EFS::AccessPoint  
    Properties:
      FileSystemId: !Ref TestEFS
      RootDirectory: 
        Path: "/testpath/test"

  MountTargetVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.31.0.0/16

  MountTargetSubnetOne:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 172.31.1.0/24
      VpcId: !Ref MountTargetVPC
      AvailabilityZone: "us-east-1a"

  MountTargetResource1:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref TestEFS
      SubnetId: !Ref MountTargetSubnetOne
      SecurityGroups:
      - !Ref SecGroup
  
  SecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Lambda-EFS-Cleanup-SC"
      SecurityGroupEgress:
        - CidrIP: 172.31.1.0/16
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
      VpcId: !Ref MountTargetVPC

  EFSCleanUpLambda:
    Type: AWS::Lambda::Function
    DependsOn: TestEFS
    Properties:
      Handler: index.handler
      Role: arn:aws:iam::447177954691:role/lambdaefscleanup
      Code: 
          ZipFile: |
            def handler(event, context):
              print("Hello World!")
      FileSystemConfigs:
        - Arn: !GetAtt TestEFSAP.Arn
          LocalMountPath: "/mnt/testpath"
      Runtime: Python
      Timeout: 5
      VpcConfig:
        SecurityGroupIds:
          - !Ref SecGroup
        SubnetIds:
          - subnet-06ce4c655effc0d9c  
 